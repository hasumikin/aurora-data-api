# TypeProf 0.21.2

# Classes
module AuroraDataApi
  class Model
    SCHEMA: Hash[untyped, untyped]
    STRUCTS: Hash[untyped, untyped]
    @struct: untyped

    def self.model_name: -> Symbol
    def self.literal_id: (Symbol lit) -> Symbol
    def self.table: (Symbol name) -> Symbol
    def self.table_name: -> Symbol
    def self.schema: () { () -> void } -> void
    def self.col: (Symbol name, singleton(String) | singleton(Time) | singleton(Date) | singleton(Integer) | Symbol type, ?Hash[Symbol, Symbol | bool] opt) -> void
    def self.timestamp: -> void
    def self.relationship_by: (Symbol table_sym) -> [untyped, untyped]?
    def initialize: (**Hash[Symbol, untyped]) -> void

    attr_reader id: Integer?
    attr_reader timestamp: bool
    attr_accessor created_at: Time
    attr_accessor updated_at: Time

    def set_timestamp: (at: :update | :create) -> bool
    def members: -> Array[Symbol]
    def respond_to_missing?: (untyped symbol, untyped include_private) -> true
    def method_missing: (untyped method_name, *untyped args) -> nil
    def table_name: -> Symbol
    def literal_id: -> Symbol
    def build_params: (?include_id: bool) -> Hash[Symbol, untyped]
    def _set_id: (Integer? id) -> void
    def _destroy: -> bool
  end
end

class AnonymousStruct_generated_1 < Struct[untyped]
end
